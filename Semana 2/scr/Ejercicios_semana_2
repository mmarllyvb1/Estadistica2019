#Ejer: ¿Qué clase de objeto es BIC? ¿Qué clase de objeto es geospiza? 
#use la función str para obtener información sobre la estructura.

class(BIC)
## [1] "data.frame"

class(geospiza)
## [1] "list"

str(geospiza)
## List of 4
## $ geospiza.tree:List of 4
## ..$ edge       : num [1:26, 1:2] 15 16 17 18 19 20 21 22 23 24 ...
## ..$ edge.length: num [1:26] 0.2974 0.0492 0.0686 0.134 0.1035 ...
## ..$ Nnode      : int 13
## ..$ tip.label  : chr [1:14] "fuliginosa" "fortis" "magnirostris" "conirostris" ...
## ..- attr(*, "class")= chr "phylo"
## $ geospiza.data: num [1:13, 1:5] 4.4 4.35 4.22 4.26 4.24 ...
## ..- attr(*, "dimnames")=List of 2
## .. ..$ : chr [1:13] "magnirostris" "conirostris" "difficilis" "scandens" ...
## .. ..$ : chr [1:5] "wingL" "tarsusL" "culmenL" "beakD" ...
## $ phy          :List of 4
## ..$ edge       : num [1:26, 1:2] 15 16 17 18 19 20 21 22 23 24 ...
## ..$ edge.length: num [1:26] 0.2974 0.0492 0.0686 0.134 0.1035 ...
## ..$ Nnode      : int 13
## ..$ tip.label  : chr [1:14] "fuliginosa" "fortis" "magnirostris" "conirostris" ...
## ..- attr(*, "class")= chr "phylo"
## $ dat          : num [1:13, 1:5] 4.4 4.35 4.22 4.26 4.24 ...
## ..- attr(*, "dimnames")=List of 2
## .. ..$ : chr [1:13] "magnirostris" "conirostris" "difficilis" "scandens" ...
## .. ..$ : chr [1:5] "wingL" "tarsusL" "culmenL" "beakD" ...


#Ejer: ¿Qué tipo de variable es tarsusL y qué clase? Abra el objeto tortues y mire 
#¿Qué tipo de variables tiene y qué clase son?, haga lo mismo con el objeto mite.env y revise 
#¿Qué tipo de variable es shurb y qué clase es? 
#Recuerde simepre usar help para saber de donde vienen los datos.

## TARSUSL es una variable continua de clase numérica
geospiza$geospiza.data
class(geospiza$geospiza.data[[2]])
## [1] "numeric"
mode(geospiza$geospiza.data[[2]])
## [1] "numeric"

## TORTUES
class(tortues[[1]])
## [1] "numeric"
mode(tortues[[1]])
## [1] "numeric"

class(tortues[[2]])
## [1] "numeric"
mode(tortues[[2]])
## [1] "numeric"

class(tortues[[3]])
## [1] "numeric"
mode(tortues[[3]])
## [1] "numeric"

class(tortues[[4]])
## [1] "factor"
mode(tortues[[4]])
## [1] "numeric"

mite.env
mode(mite.env[[4]])
## [1] "numeric"
class(mite.env[[4]])
## [1] "ordered" "factor"

#Ejer: usando el data.frame tortues calcule la proporción de hembras y machos de la muestra.
M <- length(which(tortues == 'M'))
F <- length(which(tortues == 'F'))
paste(F,'/',M,sep = '')
## [1] "24/24"
F/M
## [1] 1

#Ejer: usando el data.frame tortues calcule la proporción entre el ancho y el largo del 
#caparazón, genere una tabla con la información de tortues y la nueva variable derivada.

Ancho <- tortues$larg
Largo <- tortues$long
medidas<-cbind(Ancho, Largo)
paste(Ancho,'/',Largo,sep = '')
## [1] "74/93"   "78/94"   "80/96"  
## [4] "84/101"  "85/102"  "81/103" 
## [7] "83/104"  "83/106"  "82/107" 
## [10] "89/112"  "88/113"  "86/114" 
## [13] "90/116"  "90/117"  "91/117" 
## [16] "93/119"  "89/120"  "93/120" 
## [19] "95/121"  "93/125"  "96/127" 
## [22] "95/128"  "95/131"  "106/135"
## [25] "81/98"   "84/103"  "86/103" 
## [28] "86/105"  "88/109"  "92/123" 
## [31] "95/123"  "99/133"  "102/133"
## [34] "105/133" "100/134" "102/136"
## [37] "98/137"  "99/138"  "105/141"
## [40] "108/147" "107/149" "107/153"
## [43] "115/155" "117/155" "115/158"
## [46] "118/159" "124/162" "132/177"

Ancho/Largo
## [1] 0.7956989 0.8297872 0.8333333
## [4] 0.8316832 0.8333333 0.7864078
## [7] 0.7980769 0.7830189 0.7663551
## [10] 0.7946429 0.7787611 0.7543860
## [13] 0.7758621 0.7692308 0.7777778
## [16] 0.7815126 0.7416667 0.7750000
## [19] 0.7851240 0.7440000 0.7559055
## [22] 0.7421875 0.7251908 0.7851852
## [25] 0.8265306 0.8155340 0.8349515
## [28] 0.8190476 0.8073394 0.7479675
## [31] 0.7723577 0.7443609 0.7669173
## [34] 0.7894737 0.7462687 0.7500000
## [37] 0.7153285 0.7173913 0.7446809
## [40] 0.7346939 0.7181208 0.6993464
## [43] 0.7419355 0.7548387 0.7278481
## [46] 0.7421384 0.7654321 0.7457627

#Ejer: ¿Cuántas especies de Corvus fueron muestreadas en la región Paleártica-Africana? 
#Use el data.frame del género Corvus. ¿Qué porcentaje de Corvus muestreados habitan 
#zonas abiertas?

freqcorvus <- table(corvus$phylog)
freqcorvus
## amer orien  pale 
##    6    13     9

freqcorvush <- table(corvus$habitat)
prop.table(freqcorvush)
## clos      open 
## 0.3928571 0.6071429 

#Ejer: ¿Cómo luce el gráfico de frecuencias para los tipos de hábitat del género Corvus?

pie(prop.table(freqcorvush), density = 20, angle =c(20,80))

#Ejer: encuentre el máximo, así como lo hizo para el mínimo
max(xsp)
## [1] 56
which.max(xsp)
## Fauvette_des_jardins 
## 2
xsp[which.max(xsp)]
## Fauvette_des_jardins 
## 56

#Ejer: Repita el ejercicio para las variables continuas de tamaño de pico y tamaño del ala en 
#el género Corvus. 
#Busque cómo cambiar colores, ejes y algunas propiedades que le permitan mejorar el diseño del 
#histograma.

#PICO
table(corvus$bill)
## 45 48 49 50 51 52 55 56 57 58 59 60 61 62 63 66 
## 1  1  1  1  1  1  1  2  1  1  1  3  2  1  2  2 
## 67 72 73 80 85 
## 1  1  2  1  1 
min(corvus$bill)
## [1] 45
max(corvus$bill)
## [1] 85
range(corvus$bill)
## [1] 45 85
binbill <- seq(44.5, 85.5, 10)
corvusbill <-cut(corvus$bill,binbill)
freq_bill <- table(corvusbill)
transform(freq_bill)
## corvusbill Freq
## 1 (44.5,54.5]    6
## 2 (54.5,64.5]   14
## 3 (64.5,74.5]    6
## 4 (74.5,84.5]    1

transform(freq_bill, Relativ=prop.table(Freq), Acum=cumsum(Freq))
## corvusbill Freq    Relativ Acum
## 1 (44.5,54.5]    6 0.22222222    6
## 2 (54.5,64.5]   14 0.51851852   20
## 3 (64.5,74.5]    6 0.22222222   26
## 4 (74.5,84.5]    1 0.03703704   27

hist(corvus$bill)
hist(corvus$bill, breaks=binbill, main= 'Tamaño del pico')

#ALA
table(corvus$wing)
##226 232 237 264 286 292 293 300 319 321 325 330 333 343 345 346 350 365 370 377 379 382 
##1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
##388 397 424 430 432 473 
##1   1   1   1   1   1 
min(corvus$wing)
## [1] 226
max(corvus$wing)
## [1] 473
range(corvus$wing)
## [1] 226  473
binwing <- seq(200.5, 305.5, 10)
corvuswing <-cut(corvus$wing,binwing)
freq_wing <- table(corvuswing)
transform(freq_wing)
##corvuswing Freq
#1   (200,210]    0
#2   (210,220]    0
#3   (220,230]    1
#4   (230,240]    2
#5   (240,250]    0
#6   (250,260]    0
#7   (260,270]    1
#8   (270,280]    0
#9   (280,290]    1
#10  (290,300]    3

transform(freq_wing, Relativ=prop.table(Freq), Acum=cumsum(Freq))
##corvuswing Freq Relativ Acum
##1   (200,210]    0   0.000    0
##2   (210,220]    0   0.000    0
##3   (220,230]    1   0.125    1
##4   (230,240]    2   0.250    3
##5   (240,250]    0   0.000    3
##6   (250,260]    0   0.000    3
##7   (260,270]    1   0.125    4
##8   (270,280]    0   0.000    4
##9   (280,290]    1   0.125    5
##10  (290,300]    3   0.375    8

hist(corvus$wing)
hist(corvus$wing, breaks=binwing, main= 'Tamaño del ala')

#Invente unos datos de medidas, como se hizo en el caso de los cráneos, y genere todo el 
#ejercicio hasta el histograma. Busque otro tipo de distribuciones para generar las variables 
#ejemplo. Busque en qué casos sirve cada distribución o para qué se usan.

Ancho <-rnorm(n = 45,mean = 30,sd = 2)
Largo <- rnorm(n = 45,mean = 25,sd = 2)
medidas<-cbind(Ancho, Largo)
Tabla_medidas_uña <- as.data.frame(cbind(paste('spp',1:45,sep = '_'),medidas))
colnames(Tabla_medidas_uña) <- c('Individuos', 'Ancho','Largo')
prp <- Ancho/Largo
Tabla_medidas_prp_uña <- cbind.data.frame(Tabla_medidas_uña, prp)
